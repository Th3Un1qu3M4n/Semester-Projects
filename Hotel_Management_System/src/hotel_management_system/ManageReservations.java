/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hotel_management_system;

import java.text.ParseException;
import java.util.Date;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Th3Un1qu3M4n
 */
public class ManageReservations extends javax.swing.JFrame {

    /**
     * Creates new form ManageReservations
     */
    
    RESERVATIONS reservations = new RESERVATIONS();
    
    public ManageReservations() {
        initComponents();
        
        
        reservations.refreshReservationsTable(jTable1);
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jReserveIdField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jClientIdField = new javax.swing.JTextField();
        jRoomNoField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jClearFieldsButton = new javax.swing.JButton();
        jAddNewButton = new javax.swing.JButton();
        jUpdateButton = new javax.swing.JButton();
        jRemoveButton = new javax.swing.JButton();
        jRefreshButton = new javax.swing.JButton();
        jDateInChooser = new com.toedter.calendar.JDateChooser();
        jDateOutChooser = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1066, 611));

        jPanel3.setBackground(new java.awt.Color(0, 255, 204));

        jPanel4.setBackground(new java.awt.Color(0, 153, 153));

        jLabel1.setFont(new java.awt.Font("Arial Rounded MT Bold", 3, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("MANAGE RESERVATIONS");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 506, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel1)
                .addContainerGap(46, Short.MAX_VALUE))
        );

        jLabel2.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        jLabel2.setText("Reservation ID:");

        jReserveIdField.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jReserveIdField.setEnabled(false);

        jLabel3.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        jLabel3.setText("Client ID:");

        jClientIdField.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N

        jRoomNoField.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        jLabel4.setText("Room No. :");

        jLabel5.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        jLabel5.setText("Date In:");

        jLabel6.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        jLabel6.setText("Date Out:");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Reservation Id", "Client Id", "Room Number", "Date In", "Date Out"
            }
        )
        {public boolean isCellEditable(int row, int column){return false;}}
    );
    jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jTable1MouseClicked(evt);
        }
    });
    jScrollPane1.setViewportView(jTable1);

    jClearFieldsButton.setBackground(new java.awt.Color(255, 51, 0));
    jClearFieldsButton.setFont(new java.awt.Font("Arial Black", 3, 18)); // NOI18N
    jClearFieldsButton.setForeground(new java.awt.Color(255, 255, 255));
    jClearFieldsButton.setText("Clear Fields");
    jClearFieldsButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jClearFieldsButtonActionPerformed(evt);
        }
    });

    jAddNewButton.setFont(new java.awt.Font("Arial Black", 3, 18)); // NOI18N
    jAddNewButton.setText("Add New");
    jAddNewButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jAddNewButtonActionPerformed(evt);
        }
    });

    jUpdateButton.setFont(new java.awt.Font("Arial Black", 3, 18)); // NOI18N
    jUpdateButton.setText("Update");
    jUpdateButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jUpdateButtonActionPerformed(evt);
        }
    });

    jRemoveButton.setFont(new java.awt.Font("Arial Black", 3, 18)); // NOI18N
    jRemoveButton.setText("Remove");
    jRemoveButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jRemoveButtonActionPerformed(evt);
        }
    });

    jRefreshButton.setBackground(new java.awt.Color(0, 204, 102));
    jRefreshButton.setFont(new java.awt.Font("Arial Black", 3, 18)); // NOI18N
    jRefreshButton.setForeground(new java.awt.Color(255, 255, 255));
    jRefreshButton.setText("REFRESH");
    jRefreshButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jRefreshButtonActionPerformed(evt);
        }
    });

    jDateInChooser.setDateFormatString("dd/MM/yyyy");

    jDateOutChooser.setDateFormatString("dd/MM/yyyy");

    javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
    jPanel3.setLayout(jPanel3Layout);
    jPanel3Layout.setHorizontalGroup(
        jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addGroup(jPanel3Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(jReserveIdField, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(jClientIdField, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(jRoomNoField, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addComponent(jClearFieldsButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addComponent(jAddNewButton)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jUpdateButton)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jRemoveButton))
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(12, 12, 12)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jDateOutChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jDateInChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGap(18, 18, 18)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jRefreshButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 594, Short.MAX_VALUE))
            .addContainerGap())
    );
    jPanel3Layout.setVerticalGroup(
        jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel3Layout.createSequentialGroup()
            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(jReserveIdField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(jClientIdField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(jRoomNoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel5)
                        .addComponent(jDateInChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel6)
                        .addComponent(jDateOutChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addComponent(jClearFieldsButton)
                    .addGap(18, 18, 18)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jAddNewButton)
                        .addComponent(jUpdateButton)
                        .addComponent(jRemoveButton)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 335, Short.MAX_VALUE))
            .addGap(18, 18, 18)
            .addComponent(jRefreshButton)
            .addContainerGap())
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGap(0, 0, 0))
    );

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jClearFieldsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jClearFieldsButtonActionPerformed
        jReserveIdField.setText("");
        jClientIdField.setText("");
        jRoomNoField.setText("");
        jDateInChooser.setDate(new Date());
        jDateOutChooser.setDate(new Date());
    }//GEN-LAST:event_jClearFieldsButtonActionPerformed

    private void jRefreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRefreshButtonActionPerformed
        jTable1.setModel(new DefaultTableModel(null, new Object[]{"Reservation Id","Client Id","Room Number","Date In","Date Out"}));
        reservations.refreshReservationsTable(jTable1);
    }//GEN-LAST:event_jRefreshButtonActionPerformed

    private void jAddNewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAddNewButtonActionPerformed
        try{
            String clientIdString = jClientIdField.getText();
            String roomNumberString = jRoomNoField.getText();
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            String dateIn = dateFormat.format(jDateInChooser.getDate());
            String dateOut = dateFormat.format(jDateOutChooser.getDate());
            String todayDate = dateFormat.format(new Date());           
            
            Date dOut = dateFormat.parse(dateOut);
            Date dIn = new SimpleDateFormat("yyyy-MM-dd", Locale.ENGLISH).parse(dateIn);
            Date tdd = new SimpleDateFormat("yyyy-MM-dd", Locale.ENGLISH).parse(todayDate);
            
            
                        
            if(!(dateIn.equals(todayDate) || dIn.after(tdd))){
                
                    JOptionPane.showMessageDialog(this, "Date In cannot be before Today's Date", "Date ERROR", JOptionPane.ERROR_MESSAGE);
                    
            }else if(!(dOut.after(dIn) || dOut.equals(dIn))){
                    JOptionPane.showMessageDialog(this, "Date Out cannot be before Date In", "Date ERROR", JOptionPane.ERROR_MESSAGE);
                    
            }else if(clientIdString.trim().equals("") | roomNumberString.trim().equals(""))
                JOptionPane.showMessageDialog(this, "Client id \\ Room Number \\ dates cannot be Empty!", "Id ERROR", JOptionPane.ERROR_MESSAGE);
            
            else{

            int clientId = Integer.valueOf(clientIdString);
            int roomNumber = Integer.valueOf(roomNumberString);


            if(reservations.addReservations(clientId, roomNumber, dateIn, dateOut)) {            
                JOptionPane.showMessageDialog(this, "Room has been Added Successfully!", "Added Successfully!",  JOptionPane.INFORMATION_MESSAGE);
                jTable1.setModel(new DefaultTableModel(null, new Object[]{"Reservation Id","Client Id","Room Number","Date In","Date Out"}));
                reservations.refreshReservationsTable(jTable1);
            } else {
                JOptionPane.showMessageDialog(this, "Could not Add the Room!", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
            }
            
            
        }catch(NullPointerException ex){
            JOptionPane.showMessageDialog(this, "Dates cannot be Empty!", "Empty Fields Error ERROR", JOptionPane.ERROR_MESSAGE);
        } catch (ParseException ex) {
            Logger.getLogger(ManageReservations.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Dates cannot be Empty!", "Empty Fields Error ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jAddNewButtonActionPerformed

    private void jUpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jUpdateButtonActionPerformed
        try{
            String reserveIdString = jReserveIdField.getText();
            String clientIdString = jClientIdField.getText();
            String roomNumberString = jRoomNoField.getText();
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            String dateIn = dateFormat.format(jDateInChooser.getDate());
            String dateOut = dateFormat.format(jDateOutChooser.getDate());
            String todayDate = dateFormat.format(new Date());           
            
            Date dOut = dateFormat.parse(dateOut);
            Date dIn = new SimpleDateFormat("yyyy-MM-dd", Locale.ENGLISH).parse(dateIn);
            Date tdd = new SimpleDateFormat("yyyy-MM-dd", Locale.ENGLISH).parse(todayDate);

            if(!(dateIn.equals(todayDate) || dIn.after(tdd))){
                
                    JOptionPane.showMessageDialog(this, "Date In cannot be before Today's Date", "Date ERROR", JOptionPane.ERROR_MESSAGE);
                    
            }else if(!(dOut.after(dIn) || dOut.equals(dIn))){
                    JOptionPane.showMessageDialog(this, "Date Out cannot be before Date In", "Date ERROR", JOptionPane.ERROR_MESSAGE);
                    
            }else if(reserveIdString.trim().equals("") | clientIdString.trim().equals("") | roomNumberString.trim().equals(""))
                JOptionPane.showMessageDialog(this, "Reservation Id \\ Client id \\ Room Number \\ dates cannot be Empty!", "Id ERROR", JOptionPane.ERROR_MESSAGE);
            else{

            int reserveId = Integer.valueOf(reserveIdString);    
            int clientId = Integer.valueOf(clientIdString);
            int roomNumber = Integer.valueOf(roomNumberString);


            if(reservations.updateReservations(reserveId, clientId, roomNumber, dateIn, dateOut)) {            
                JOptionPane.showMessageDialog(this, "Room has been Updated Successfully!", "Updates Successfully!",  JOptionPane.INFORMATION_MESSAGE);
                jTable1.setModel(new DefaultTableModel(null, new Object[]{"Reservation Id","Client Id","Room Number","Date In","Date Out"}));
                reservations.refreshReservationsTable(jTable1);
                
            } else {
                JOptionPane.showMessageDialog(this, "Could not Update the Room!", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
            }
        }catch(NullPointerException ex){
            JOptionPane.showMessageDialog(this, "Dates cannot be Empty!", "Empty Fields Error ERROR", JOptionPane.ERROR_MESSAGE);
        } catch (ParseException ex) {
            Logger.getLogger(ManageReservations.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jUpdateButtonActionPerformed

    private void jRemoveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRemoveButtonActionPerformed
        
        
        String reserveIdString = jReserveIdField.getText();
        
        if(reserveIdString.trim().equals(""))
            JOptionPane.showMessageDialog(this, "Reservation id cannot be Empty!", "Reservation Id ERROR", JOptionPane.ERROR_MESSAGE);
        else{
        
        int reserveId = Integer.valueOf(reserveIdString);
                 
        
        if(reservations.removeReservation(reserveId)) {            
            JOptionPane.showMessageDialog(this, "Reservation has been Removed Successfully!", "Removed Successfully!",  JOptionPane.INFORMATION_MESSAGE);
            jTable1.setModel(new DefaultTableModel(null, new Object[]{"Reservation Id","Client Id","Room Number","Date In","Date Out"}));
            reservations.refreshReservationsTable(jTable1);
                
        } else {
            JOptionPane.showMessageDialog(this, "Could not Remove the Reservation!", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
        }
    }//GEN-LAST:event_jRemoveButtonActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        
        
        DefaultTableModel tableModel = (DefaultTableModel) jTable1.getModel();
        
        int rowIndex = jTable1.getSelectedRow();
        
        jReserveIdField.setText(tableModel.getValueAt(rowIndex,0).toString());
        jClientIdField.setText(tableModel.getValueAt(rowIndex,1).toString());
        jRoomNoField.setText(tableModel.getValueAt(rowIndex,2).toString());
        
        try {
            Date dateIn = new SimpleDateFormat("yyyy-MM-dd").parse(tableModel.getValueAt(rowIndex, 3).toString());
            Date dateOut = new SimpleDateFormat("yyyy-MM-dd").parse(tableModel.getValueAt(rowIndex, 4).toString());
            
            jDateInChooser.setDate(dateIn);
            jDateOutChooser.setDate(dateOut);
            
        } catch (ParseException ex) {
            Logger.getLogger(ManageReservations.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
    }//GEN-LAST:event_jTable1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageReservations.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageReservations.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageReservations.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageReservations.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageReservations().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jAddNewButton;
    private javax.swing.JButton jClearFieldsButton;
    private javax.swing.JTextField jClientIdField;
    private com.toedter.calendar.JDateChooser jDateInChooser;
    private com.toedter.calendar.JDateChooser jDateOutChooser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JButton jRefreshButton;
    private javax.swing.JButton jRemoveButton;
    private javax.swing.JTextField jReserveIdField;
    private javax.swing.JTextField jRoomNoField;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton jUpdateButton;
    // End of variables declaration//GEN-END:variables
}
